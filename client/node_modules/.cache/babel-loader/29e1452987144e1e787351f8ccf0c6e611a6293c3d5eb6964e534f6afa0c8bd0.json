{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\dumble\\\\client\\\\src\\\\pages\\\\gymbro.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\nimport './gymbro.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gymbro() {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [recommendations, setRecommendations] = useState([{\n    id: 1,\n    name: \"Alex\",\n    bio: \"Gym lover and fitness freak\",\n    img: \"/public/alex.jpg\"\n  }, {\n    id: 2,\n    name: \"Jordan\",\n    bio: \"Powerlifting enthusiast\",\n    img: \"/public/jordan.jpg\"\n  }, {\n    id: 3,\n    name: \"Taylor\",\n    bio: \"Yoga and wellness advocate\",\n    img: \"/public/taylor.jpg\"\n  }]);\n  const x = useMotionValue(0);\n  const background = useTransform(x, [-100, 0, 100], [\"#ff0000\", \"#7700ff\", \"#008000\"]);\n  const handleSwipe = (user, direction) => {\n    if (direction === \"right\") {\n      setFriends([...friends, user]);\n    }\n    setRecommendations(recommendations.filter(u => u.id !== user.id));\n    x.set(0); // Reset position after swipe\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gymbroContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Gymbros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: friend.img,\n            alt: `${friend.name}'s profile`,\n            className: \"profileImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), friend.name]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gymbroBody\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"cardStack\",\n        children: recommendations.map((user, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"card\",\n          style: {\n            x,\n            background\n          },\n          drag: \"x\",\n          dragConstraints: {\n            left: 0,\n            right: 0\n          },\n          onDragEnd: (e, info) => {\n            if (info.offset.x > 100) handleSwipe(user, \"right\");\n            if (info.offset.x < -100) handleSwipe(user, \"left\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardImage\",\n            style: {\n              backgroundImage: `url(${user.img})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Gymbro, \"q3+BYmgXEBorVQV+16MKV2vvyPg=\", false, function () {\n  return [useMotionValue, useTransform];\n});\n_c = Gymbro;\nexport default Gymbro;\nvar _c;\n$RefreshReg$(_c, \"Gymbro\");","map":{"version":3,"names":["React","useState","motion","useMotionValue","useTransform","jsxDEV","_jsxDEV","Gymbro","_s","friends","setFriends","recommendations","setRecommendations","id","name","bio","img","x","background","handleSwipe","user","direction","filter","u","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","index","src","alt","div","style","drag","dragConstraints","left","right","onDragEnd","e","info","offset","backgroundImage","_c","$RefreshReg$"],"sources":["D:/programming/dumble/client/src/pages/gymbro.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\r\nimport './gymbro.css';\r\n\r\nfunction Gymbro() {\r\n    const [friends, setFriends] = useState([]);\r\n    const [recommendations, setRecommendations] = useState([\r\n        { id: 1, name: \"Alex\", bio: \"Gym lover and fitness freak\", img: \"/public/alex.jpg\" },\r\n        { id: 2, name: \"Jordan\", bio: \"Powerlifting enthusiast\", img: \"/public/jordan.jpg\" },\r\n        { id: 3, name: \"Taylor\", bio: \"Yoga and wellness advocate\", img: \"/public/taylor.jpg\" },\r\n    ]);\r\n    const x = useMotionValue(0);\r\n    const background = useTransform(x, [-100, 0, 100], [\"#ff0000\", \"#7700ff\", \"#008000\"]);\r\n\r\n    const handleSwipe = (user, direction) => {\r\n        if (direction === \"right\") {\r\n            setFriends([...friends, user]);\r\n        }\r\n        setRecommendations(recommendations.filter((u) => u.id !== user.id));\r\n        x.set(0); // Reset position after swipe\r\n    };\r\n\r\n    return (\r\n        <div className=\"gymbroContainer\">\r\n            <div className=\"sidebar\">\r\n                <h3>Gymbros</h3>\r\n                <ul>\r\n                    {friends.map((friend, index) => (\r\n                        <li key={index}>\r\n                            <img src={friend.img} alt={`${friend.name}'s profile`} className=\"profileImage\" />\r\n                            {friend.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"gymbroBody\">\r\n                <motion.div className=\"cardStack\">\r\n                    {recommendations.map((user, index) => (\r\n                        <motion.div\r\n                            key={user.id}\r\n                            className=\"card\"\r\n                            style={{ x, background }}\r\n                            drag=\"x\"\r\n                            dragConstraints={{ left: 0, right: 0 }}\r\n                            onDragEnd={(e, info) => {\r\n                                if (info.offset.x > 100) handleSwipe(user, \"right\");\r\n                                if (info.offset.x < -100) handleSwipe(user, \"left\");\r\n                            }}\r\n                        >\r\n                            <div className=\"cardImage\" style={{ backgroundImage: `url(${user.img})` }}></div>\r\n                            <div className=\"cardInfo\">\r\n                                <h2>{user.name}</h2>\r\n                                <p>{user.bio}</p>\r\n                            </div>\r\n                        </motion.div>\r\n                    ))}\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gymbro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}